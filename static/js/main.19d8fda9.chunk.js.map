{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","msg","Navbar","Fragment","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","color","heading","value","onChange","event","target","backgroundColor","rows","uptext","toUpperCase","showAlert","lotext","toLowerCase","length","split","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","background","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.19d8fda9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div style={{height : '50px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.msg}</strong>\r\n</div>}\r\n</div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n              {props.title}\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div\r\n              className=\"collapse navbar-collapse\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                    HOME\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n              <div className={`form-check form-switch text-${props.mode==='light'? 'grey':'white'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string\r\n\r\n};\r\nNavbar.defaultProps={\r\n    title :'TITLE'\r\n    \r\n};","import React,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick= () =>{\r\n    let uptext=text.toUpperCase();\r\n    setText(uptext);\r\n    props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n    const handleloClick= () =>{\r\n        let lotext=text.toLowerCase();\r\n        setText(lotext);\r\n        \r\n    props.showAlert(\"Converted to Lowercase\",\"success\");\r\n        }\r\n    const handleOnChange= (event) =>{\r\n        setText(event.target.value);\r\n        }\r\n        const handleClear= () =>{\r\n            setText('');\r\n            props.showAlert(\"Text Cleared\",\"success\");\r\n        }\r\n    const[text,setText]=useState('');\r\n  return (\r\n      <>\r\n      <div className= \"container\" style= {{color: props.mode==='dark'? 'white':'black'}}>\r\n   <h1>{props.heading}</h1>\r\n   <div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'? 'grey':'white',color: props.mode==='dark'? 'white':'black'}} rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleloClick}>Convert to Lowercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleClear}>Clear Text</button>\r\n</div>\r\n<div className= \"container my-3\" style= {{color: props.mode==='dark'? 'white':'black'}}>\r\n    <h2> Your Summary</h2>\r\n    <p> Number of Character: {text.length}</p>\r\n    <p> Number of words :{text.split(/[^\\s]+/).length-1} </p>\r\n    <h2>Preview</h2>\r\n    <p> {text.length>0?text:\"Enter something in the textbox above\"} </p>\r\n</div>\r\n    </>\r\n  )\r\n}\r\n","\nimport React,{useState}  from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const [alert,setAlert]=useState(null);\n  const showAlert= (message, type)=>{\n    setAlert({\n    msg : message,\n    type : type\n    });\n    setTimeout(() => {\n     setAlert(null); \n    }, 2000);\n  }\n  const toggleMode = ()=>{\n    if(mode==='light')\n    {setMode('dark');\n    document.body.style.background='#042743';\n    showAlert(\"Dark Mode has been enabled\",\"success\");}\n    else \n    {setMode('light')\n    document.body.style.background='white';\n    showAlert(\"Light Mode has been enabled\",\"success\");}\n  }\n  return (\n    <>  {/* jsx fragment  */}\n    <Navbar title=\"TEXTUTILS\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className= \"container my-3\">\n    <Textform showAlert={showAlert} heading=\"Enter the text to analyse\" mode={mode}/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}